<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://amrhmorsy.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://amrhmorsy.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-31T13:06:20+00:00</updated><id>https://amrhmorsy.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Refraction Vector Calculation</title><link href="https://amrhmorsy.github.io/blog/2024/RefractionVectorCalculation/" rel="alternate" type="text/html" title="Refraction Vector Calculation"/><published>2024-10-31T12:00:00+00:00</published><updated>2024-10-31T12:00:00+00:00</updated><id>https://amrhmorsy.github.io/blog/2024/RefractionVectorCalculation</id><content type="html" xml:base="https://amrhmorsy.github.io/blog/2024/RefractionVectorCalculation/"><![CDATA[<h3 id="introduction-">Introduction <br/></h3> <p>When a beam of light hits the surface of an objecy, part of its energy is absorbed by the surface, part of its energy is reflected away and part of its energy may refract through the object itself.</p> <p>In this blog post, we will discuss the mathematics of how to calculate the refraction vector.</p> <p><br/></p> <h3 id="snell-law-">Snell Law <br/></h3> <p>Transparent surfaces possess a property called the <strong>index of refraction</strong>. This refractive index determines how much the path of light is bent or refracted, when entering a material. This can be explained by <strong>Snell’s Law</strong>.</p> <p>Let \(n_L\) be the index of refraction of the material the light is leaving, \(\theta_L\) be the angle of incidence, \(n_T\) be the index of refraction of the material the light is entering and \(\theta_T\) be the angle of refraction. <strong>Snell Law</strong> states that:</p> \[n_L sin \theta_L = n_T sin \theta_T\] <p>Each medium has its own index of refraction. For example, the index of refraction of air is 1.000293, while the index of refraction of diamond is 2.417. Higher indexes of refraction create a greated bending effect at the interface between two materials; the refraction vector bends more towards the normal vector.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Introduction]]></summary></entry><entry><title type="html">Reflection Vector Calculation</title><link href="https://amrhmorsy.github.io/blog/2024/ReflectionVectorCalculation/" rel="alternate" type="text/html" title="Reflection Vector Calculation"/><published>2024-10-28T12:00:00+00:00</published><updated>2024-10-28T12:00:00+00:00</updated><id>https://amrhmorsy.github.io/blog/2024/ReflectionVectorCalculation</id><content type="html" xml:base="https://amrhmorsy.github.io/blog/2024/ReflectionVectorCalculation/"><![CDATA[<h3 id="introduction-">Introduction <br/></h3> <p>About a month ago, I was interviewed for a graphics programmer position. Among the questions asked was how to calculate the reflection vector of an incident light ray on a surface. Unfortunately, I was a bit nervous during the interview and couldn’t think clearly, so I couldn’t answer the question. Unsurprisingly, I didn’t get the position.</p> <p>Ironically, the solution came to mind shortly after the interview. I took some time to review the math behind it again and decided to write a blog post to break it down.</p> <p>In this post, I’ll explain the mathematics of calculating the reflection vector given an incident light vector on a surface. Let \(L\) be the incident light vector at an angle \(\theta\) from the normal, \(N\), of the surface, and \(R\) be the reflection vector of \(L\).</p> <p>Suppose \(N\) and \(L\) are normalized to unit length.</p> <p><br/></p> <h3 id="law-of-reflection-">Law of Reflection <br/></h3> <p>The law of reflection states that the angle of incidence is equal to the angle of reflection. Thus, we know that the reflection angle is also \(\theta\) from the normal, \(N\).</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/D1-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/D1-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/D1-1400.webp"/> <img src="/assets/img/D1.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <h3 id="decomposition-of-vectors-">Decomposition of Vectors <br/></h3> <p>Each vector has both parallel and perpendicular components relative to \(N\).</p> <p>The parallel component of \(L\) along \(N\) is:</p> \[L_{||} = (L.N)N\] <p>Alternatively, this can be expressed as \(N cos \theta\)</p> <p>The perpendicular component of \(L\) along \(N\) is:</p> \[L_⊥ = L - (L.N)N\] <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/D2-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/D2-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/D2-1400.webp"/> <img src="/assets/img/D2.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <h3 id="calculating-the-reflection-vector-">Calculating the Reflection Vector <br/></h3> <p>To compute \(R\), we reverse the parallel component of \(L\) along \(N\) and keep the perpendicular component unchanged:</p> \[R = L_⊥ - L_{||}\] \[R = L - (L.N)N - (L.N)N\] \[R = L - 2 (L.N)N\] <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/D3-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/D3-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/D3-1400.webp"/> <img src="/assets/img/D3.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <p><br/></p> <h3 id="implementation-">Implementation <br/></h3> <p>Here’s the C++ code using the GLM library:</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">glm</span><span class="o">::</span><span class="n">vec3</span> <span class="nf">compute_reflection_vector</span><span class="p">(</span> <span class="n">glm</span><span class="o">::</span><span class="n">vec3</span> <span class="n">L</span><span class="p">,</span> <span class="n">glm</span><span class="o">::</span><span class="n">vec3</span> <span class="n">N</span> <span class="p">)</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">L</span> <span class="o">-</span> <span class="mf">2.0</span><span class="n">f</span> <span class="o">*</span> <span class="n">glm</span><span class="o">::</span><span class="n">dot</span><span class="p">(</span> <span class="n">L</span><span class="p">,</span> <span class="n">N</span> <span class="p">)</span> <span class="o">*</span> <span class="n">N</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[Introduction]]></summary></entry></feed>